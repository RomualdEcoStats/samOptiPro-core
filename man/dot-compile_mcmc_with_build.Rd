% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnostics.R
\name{.compile_mcmc_with_build}
\alias{.compile_mcmc_with_build}
\title{Singleton-based sampler strategy: full HMC if allowed, else per-bottleneck scalars}
\usage{
.compile_mcmc_with_build(conf, build_obj, reset = TRUE, show = FALSE)
}
\arguments{
\item{build_fn}{A function returning \code{list(model, cmodel?, monitors?)} used by the runners.}

\item{monitors}{Character or \code{NULL}; root names to monitor (\code{NULL} = auto in runners).}

\item{try_hmc}{Logical; if \code{TRUE} and structure allows, run the full HMC path.}

\item{nchains}{Integer; number of chains for baseline/steps.}

\item{pilot_niter}{Integer; total iterations for pilot runs.}

\item{pilot_burnin}{Integer; burn-in for pilot runs.}

\item{thin}{Integer; thinning factor.}

\item{out_dir}{Character; output directory for diagnostics/plots.}

\item{nbot}{Integer (\eqn{\ge} 1); number of singleton bottleneck nodes to operate on.}

\item{order_scalar}{Character vector; sampler order for singleton mode (default NUTS → slice → RW).}

\item{force_plan}{Named list or \code{NULL}; optional forced plan, e.g.
\code{list("beta[1]" = "slice", "sigma" = "RW")}. Forced entries override automatic order for those nodes.}

\item{ask}{Logical; if \code{TRUE}, prompt user after each step ("Proceed? yes/no").}

\item{enable_barker_scalar}{Logical; if \code{TRUE}, use "barker" fallback after RW failure.}

\item{slice_control}{List; controls for the slice sampler.}

\item{rw_control}{List; controls for the RW sampler.}
}
\value{
A list: baseline, steps, configurations, diagnostics, plot paths, messages.
}
\description{
If the model is differentiable and \code{try_hmc = TRUE}, this function runs a full
HMC/NUTS configuration (via your \code{configure_hmc_safely()}), executes a pilot,
prints/plots diagnostics, and returns.

Otherwise it switches to a \strong{surgical singleton strategy}: rank
\emph{stochastic} targets by efficiency and, for the first \code{nbot} nodes, iteratively
assign a scalar sampler in the order:
\strong{NUTS → slice → RW} (configurable; optional \code{barker} fallback after RW).

After each assignment, it runs a short MCMC, prints a side-by-side comparison
with the baseline (runtime, AE = ESS/iter, CE = ESS/s, Rhat), saves clean plots
(Rhat bars + trace plots for the touched node), and \strong{asks the user}
to continue (\code{yes/no}) unless \code{ask = FALSE}.
}
