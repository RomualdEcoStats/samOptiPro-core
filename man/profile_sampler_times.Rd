% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnostics.R
\name{profile_sampler_times}
\alias{profile_sampler_times}
\title{Sampler time profiling aligned with \code{conf$getSamplers()}}
\usage{
profile_sampler_times(
  model,
  conf,
  niter = 2000L,
  burnin = 500L,
  thin = 1L,
  set_seed = NULL,
  progress = FALSE
)

profile_sampler_times(
  model,
  conf,
  niter = 2000L,
  burnin = 500L,
  thin = 1L,
  set_seed = NULL,
  progress = FALSE
)
}
\arguments{
\item{model}{\code{nimbleModel} (uncompiled), initialized.}

\item{conf}{MCMC configuration from \code{nimble::configureMCMC(model, ...)}.}

\item{niter}{Total iterations including burn-in.}

\item{burnin}{Number of warm-up iterations before timing.}

\item{thin}{Thinning interval (\eqn{\ge} 1). If \code{> 1}, extra sweeps are advanced without timing.}

\item{set_seed}{Integer or \code{NULL}; if not \code{NULL}, \code{set.seed()} for reproducibility.}

\item{progress}{Logical; print simple 10\\% progress.}

\item{cmodel}{A compiled \code{nimbleModel} (the \code{project} for compilation).}

\item{mcmc_conf}{An MCMC configuration (\code{configureMCMC(model)}); if \code{NULL}, an automatic attempt is made.}

\item{include_data}{Logical; include data nodes (default \code{FALSE}).}

\item{removed_nodes}{Character vector; nodes to exclude (e.g., ESS = 0).}

\item{ignore_patterns}{Character vector; regex to ignore
(default \code{c("^lifted_", "^logProb_")}).}

\item{plot_dependencies}{Logical; if \code{TRUE}, barplot (ggplot2) of medians per family.}

\item{output_dir}{Character or \code{NULL}; directory for CSV/PNG exports
(\code{NULL} = no export).}

\item{save_csv}{Logical; if \code{TRUE}, write \code{dependencies_per_node.csv} to \code{output_dir}.}

\item{node_of_interest}{Character or \code{NULL}; node whose filtered downstream deps are requested.}

\item{np}{Numeric in (0,1]; proportion for \code{prop_worst = ceil(n_samplers * np)} (default \code{0.10}).}

\item{...}{Additional arguments passed to \code{nimble::configureMCMC()} (e.g., \code{print = FALSE}, \code{useConjugacy = FALSE}).}
}
\value{
A numeric vector of elapsed time per sampler (in seconds), padded or
truncated to match the number of samplers in \code{conf}.

A list with \code{stochastic_nodes}, \code{deterministic_nodes}, and \code{dims}.

A list with:
\itemize{
\item \code{stochastic_nodes} (character): filtered stochastic nodes,
\item \code{deterministic_nodes} (character): filtered deterministic nodes,
\item \code{dims} (named list): dimensions for each base (root) variable (no indices),
\item \code{nodes}: \code{NULL} (backward compatibility),
\item \code{dependencies_df} (data.frame): table of (node, dependency) (NA if none),
\item \code{dep_counts} (data.frame): (nodename, n, type, family) with n = #filtered deps,
\item \code{dep_summary} (data.frame): median dependencies by (type, family),
\item \code{plot_regular} (gg or \code{NULL}): ggplot medians by family for type == "Regular",
\item \code{node_of_interest_deps} (character or \code{NULL}): downstream deps for requested node.
}

A list:
\preformatted{
  (stochastic_nodes, deterministic_nodes, dims, nodes = NULL,
   dependencies_df, dep_counts, dep_summary, plot_regular,
   node_of_interest_deps,
   samplers_df, n_samplers, prop_worst)
}

A list:
\preformatted{
  (stochastic_nodes, deterministic_nodes, dims, nodes = NULL,
   dependencies_df, dep_counts, dep_summary, plot_regular,
   node_of_interest_deps,
   samplers_df, n_samplers, prop_worst,
   mcmc_conf)  # configuration created internally
}

A numeric vector of length \code{length(conf$getSamplers())}, aligned with the
sampler order returned by \code{conf$getSamplers()}. Units are seconds.

Profile per-sampler elapsed times (uncompiled MCMC, R-level granularity)

Builds an uncompiled MCMC and measures wall-clock time spent in each sampler
by instrumenting calls to each samplerFunction$run() over a short run.

Numeric vector of length \code{length(conf$getSamplers())}, seconds per sampler (aligned by index).
}
\description{
Builds and compiles an MCMC from a provided configuration, runs
\code{run(niter, time = TRUE)}, and returns per-sampler elapsed times
aligned with the order of \code{conf$getSamplers()}.

Analyze a NIMBLE model to list stochastic/deterministic nodes, the dimensions
of base variables, and \strong{downstream dependencies} between nodes.
Artificial nodes created by NIMBLE (e.g., \code{lifted_*}, \code{logProb_*}) are
\strong{ignored}, as are nodes explicitly excluded via \code{removed_nodes}.
Optionally, the function:
\itemize{
\item exports a CSV of dependencies per node,
\item computes a family-level summary (base name without indices),
\item draws a ggplot2 barplot of \strong{medians} of dependency counts per family
(for regular nodes) if \code{plot_dependencies = TRUE}.
}

Analyze a NIMBLE model to obtain stochastic/deterministic nodes, dimensions,
\strong{downstream dependencies} (filtered of artificial nodes), and \strong{samplers}
(type & targets) from an MCMC configuration.
Artificial nodes \code{lifted_*}, \code{logProb_*}, and \code{removed_nodes} are
\strong{ignored} throughout. Optional: CSV export of dependencies and a ggplot2 barplot
of median dependencies per family.

Analyze a NIMBLE model: stochastic/deterministic nodes, dimensions,
\strong{downstream dependencies} (ignoring artificial nodes), and \strong{samplers}
(type & targets) from an MCMC configuration \strong{built internally} via
\code{nimble::configureMCMC(model, ...)}.

Artificial nodes \code{lifted_*}, \code{logProb_*}, and \code{removed_nodes} are
\strong{ignored} everywhere. Optionally: CSV export and ggplot2 barplot of
\strong{medians} of dependencies by family (with \strong{labels = count}).

Build an uncompiled MCMC (\code{nimble::buildMCMC(conf)}) and measure wall-clock
elapsed time spent in each sampler by instrumenting calls to \code{sampler$run()}
over a short run. This preserves \strong{per-sampler granularity}, which is lost in
compiled MCMC.
}
